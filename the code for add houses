package javaapplication394;

import java.awt.*;
import static java.awt.Color.white;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.plaf.basic.BasicMenuBarUI;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;


public class NewJFrame2 extends javax.swing.JFrame {
static  PreparedStatement preparedstatement;
    int count = 0;
    Connection connection = null;
    Statement statement = null;
    ResultSet resultSet = null;
    String query;
    int curRow = 0;
    DefaultListModel model = new DefaultListModel();

    boolean YARD = false;

   
    public NewJFrame2() {
        initComponents();
        doConnect();
        setTitle("House Rental-Add House");
        // to change icon java in title bar
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Houses.png")));
        // end change icon java in title bar
        // to change color menu
        jMenuBar1.setUI(new BasicMenuBarUI() {
            public void paint(Graphics g, JComponent c) {
                g.setColor(new Color(223, 238, 218));
                g.fillRect(0, 0, c.getWidth(), c.getHeight());
            }
        });

        Toolkit toolkit = Toolkit.getDefaultToolkit();
        double width = toolkit.getScreenSize().getWidth();
        double height = toolkit.getScreenSize().getHeight();
        setSize((int) width, (int) height);
    }

    public void doConnect() {
        try {
            String URL = "jdbc:mysql://localhost/RentalHouses";
            String username = "root";
            String password = "12345";
            query = "select * from HOUSESInformation";
            connection = DriverManager.getConnection(URL, username, password);
            statement = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            resultSet = statement.executeQuery(query);
 
            resultSet.next();

            ID_hh.setText(resultSet.getString("ID_H"));
            L_HouseNumber.setText(resultSet.getString("HOUSE_NO"));
            L_Size.setText(resultSet.getString("Size"));
            L_NimberRooms.setText(resultSet.getString("NO_Rooms"));
            ListFloor.setText(resultSet.getString("NO_Floors"));
            L_Location.setText(resultSet.getString("Location"));
            L_Price.setText(resultSet.getString("Price"));
            L_OWNER.setText(resultSet.getString("ID_O"));

            jTextArea1.setText("ID Owner: " + ID_hh.getText() + "\n"
                    + "HOUSE NO.: " + L_HouseNumber.getText() + "\n"
                    + "Size: " + L_Size.getText() + "\n"
                    + "NO. OF Rooms: " + L_NimberRooms.getText() + "\n"
                    + "NO. of Floors: " + ListFloor.getText() + "\n"
                    + "Location: " + L_Location.getText() + "\n"
                    + "Price: " + L_Price.getText() + "\n"
                    + "ID_Owner: " + L_OWNER.getText() + "\n"
            );

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        H_ID = new javax.swing.JLabel();
        House_Number = new javax.swing.JLabel();
        L_HouseNumber = new javax.swing.JTextField();
        Size = new javax.swing.JLabel();
        L_NimberRooms = new javax.swing.JTextField();
        NumberRooms = new javax.swing.JLabel();
        L_Size = new javax.swing.JTextField();
        NumberFloors = new javax.swing.JLabel();
        Yard = new javax.swing.JLabel();
        yesyard = new javax.swing.JRadioButton();
        Noyard = new javax.swing.JRadioButton();
        OwnerId = new javax.swing.JLabel();
        L_OWNER = new javax.swing.JTextField();
        Location = new javax.swing.JLabel();
        L_Location = new javax.swing.JTextField();
        addRooms = new javax.swing.JToggleButton();
        SubRoom = new javax.swing.JToggleButton();
        price = new javax.swing.JLabel();
        L_Price = new javax.swing.JTextField();
        ID_hh = new javax.swing.JTextField();
        ListFloor = new javax.swing.JTextField();
        Addh = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Modify = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Previous = new javax.swing.JButton();
        NEXT = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        option = new javax.swing.JMenu();
        AddHouse = new javax.swing.JMenuItem();
        AddTenants = new javax.swing.JMenuItem();
        AddOwner = new javax.swing.JMenuItem();
        user = new javax.swing.JMenu();
        SignOut = new javax.swing.JMenuItem();
        mode = new javax.swing.JMenu();
        light = new javax.swing.JMenuItem();
        Dark = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();
        Control = new javax.swing.JMenuItem();
        About = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        jMenuItem1.setText("jMenuItem1");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(208, 221, 203));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(223, 238, 218));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "*Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Sitka Banner", 3, 24), new java.awt.Color(153, 153, 153))); // NOI18N

        H_ID.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        H_ID.setText("ID");

        House_Number.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        House_Number.setText("House Number");

        Size.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        Size.setText("Size");

        L_NimberRooms.setEditable(false);

        NumberRooms.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        NumberRooms.setText("Number of Rooms ");

        NumberFloors.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        NumberFloors.setText("Number of Floors");

        Yard.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        Yard.setText("Yard");

        yesyard.setBackground(new java.awt.Color(223, 238, 218));
        buttonGroup1.add(yesyard);
        yesyard.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        yesyard.setText("Yes");

        Noyard.setBackground(new java.awt.Color(223, 238, 218));
        buttonGroup1.add(Noyard);
        Noyard.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Noyard.setText("No");

        OwnerId.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        OwnerId.setText("Owner ID");

        Location.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        Location.setText("Location");

        addRooms.setBackground(new java.awt.Color(223, 238, 218));
        addRooms.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/addIcon.png"))); // NOI18N
        addRooms.setPreferredSize(new java.awt.Dimension(45, 20));
        addRooms.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomsActionPerformed(evt);
            }
        });

        SubRoom.setBackground(new java.awt.Color(223, 238, 218));
        SubRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/subticon.png"))); // NOI18N
        SubRoom.setPreferredSize(new java.awt.Dimension(45, 20));
        SubRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubRoomActionPerformed(evt);
            }
        });

        price.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        price.setText("Price");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(House_Number)
                        .addComponent(H_ID, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(Size)
                    .addComponent(NumberRooms)
                    .addComponent(NumberFloors)
                    .addComponent(OwnerId)
                    .addComponent(Location)
                    .addComponent(Yard)
                    .addComponent(price))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(L_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(L_NimberRooms, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(L_HouseNumber, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(L_Size, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addRooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SubRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(yesyard)
                                .addGap(18, 18, 18)
                                .addComponent(Noyard))
                            .addComponent(L_OWNER, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ID_hh, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(ListFloor, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(L_Location, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)))
                        .addContainerGap(125, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SubRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(H_ID)
                            .addComponent(ID_hh, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(House_Number)
                            .addComponent(L_HouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Size)
                            .addComponent(L_Size, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(NumberRooms)
                            .addComponent(L_NimberRooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addRooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumberFloors)
                    .addComponent(ListFloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Location)
                    .addComponent(L_Location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Yard)
                    .addComponent(yesyard)
                    .addComponent(Noyard))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OwnerId)
                    .addComponent(L_OWNER, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(price)
                    .addComponent(L_Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(123, Short.MAX_VALUE))
        );

        Addh.setBackground(new java.awt.Color(223, 238, 218));
        Addh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/AddHouse.png"))); // NOI18N
        Addh.setText("Add");
        Addh.setPreferredSize(new java.awt.Dimension(95, 29));
        Addh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddhActionPerformed(evt);
            }
        });

        Delete.setBackground(new java.awt.Color(223, 238, 218));
        Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/DeleteIcon.png"))); // NOI18N
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Modify.setBackground(new java.awt.Color(223, 238, 218));
        Modify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/ModifyIcon.png"))); // NOI18N
        Modify.setText("Modify");
        Modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyActionPerformed(evt);
            }
        });

        Back.setBackground(new java.awt.Color(223, 238, 218));
        Back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/Back.jpg"))); // NOI18N
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(230, 245, 226));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Sitka Small", 2, 28)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        Previous.setBackground(new java.awt.Color(223, 238, 218));
        Previous.setText("Previous");
        Previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreviousActionPerformed(evt);
            }
        });

        NEXT.setBackground(new java.awt.Color(223, 238, 218));
        NEXT.setText("NEXT");
        NEXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NEXTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(Previous)
                        .addGap(155, 155, 155)
                        .addComponent(NEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(398, 398, 398)
                        .addComponent(Delete)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 267, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Addh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Modify)
                        .addGap(274, 274, 274))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Back)
                        .addGap(343, 343, 343))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Modify, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Addh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Previous)
                            .addComponent(NEXT))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(208, 221, 203));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(208, 221, 203)));
        jMenuBar1.setAlignmentY(0.5F);

        option.setText("  Options  ");
        option.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N
        option.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionActionPerformed(evt);
            }
        });

        AddHouse.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        AddHouse.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AddHouse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/AddHouse.png"))); // NOI18N
        AddHouse.setText("Add House");
        AddHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddHouseActionPerformed(evt);
            }
        });
        AddHouse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AddHouseKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AddHouseKeyTyped(evt);
            }
        });
        option.add(AddHouse);

        AddTenants.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        AddTenants.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AddTenants.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/AddTenants.png"))); // NOI18N
        AddTenants.setText("Add Tenants");
        AddTenants.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddTenantsActionPerformed(evt);
            }
        });
        option.add(AddTenants);

        AddOwner.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        AddOwner.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AddOwner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/AddOwner.jpg"))); // NOI18N
        AddOwner.setText("Add Owner");
        AddOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddOwnerActionPerformed(evt);
            }
        });
        option.add(AddOwner);

        jMenuBar1.add(option);

        user.setText("  User  ");
        user.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N

        SignOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        SignOut.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        SignOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/signOutt.png"))); // NOI18N
        SignOut.setText("Sign Out");
        SignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignOutActionPerformed(evt);
            }
        });
        user.add(SignOut);

        jMenuBar1.add(user);

        mode.setText("  Mode  ");
        mode.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N

        light.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        light.setBackground(new java.awt.Color(223, 238, 218));
        light.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        light.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/sun.png"))); // NOI18N
        light.setText("Light");
        light.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lightActionPerformed(evt);
            }
        });
        mode.add(light);

        Dark.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        Dark.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        Dark.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/Dark.png"))); // NOI18N
        Dark.setText("Dark");
        Dark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DarkActionPerformed(evt);
            }
        });
        mode.add(Dark);

        Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        Exit.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/Exitt.png"))); // NOI18N
        Exit.setText("Exit");
        Exit.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        mode.add(Exit);

        jMenuBar1.add(mode);

        Help.setText("  Help  ");
        Help.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N
        Help.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                HelpMenuSelected(evt);
            }
        });

        Control.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        Control.setText("Help Control");
        Control.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ControlActionPerformed(evt);
            }
        });
        Help.add(Control);

        About.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        About.setText("About");
        About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutActionPerformed(evt);
            }
        });
        Help.add(About);

        jMenuItem4.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jMenuItem4.setText("Contact");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        Help.add(jMenuItem4);

        jMenuBar1.add(Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void DarkActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        jMenuBar1.setUI(new BasicMenuBarUI() {
            public void paint(Graphics g, JComponent c) {
                g.setColor(new Color(0, 82, 33));
                g.fillRect(0, 0, c.getWidth(), c.getHeight());
            }
        });
        jPanel1.setBackground(new Color(72, 72, 72));
        jPanel2.setBackground(new Color(0, 82, 33));
        mode.setForeground(Color.WHITE);
        user.setForeground(Color.WHITE);
        option.setForeground(Color.WHITE);
        Help.setForeground(Color.WHITE);
        H_ID.setForeground(white);
        price.setForeground(white);
        House_Number.setForeground(white);
        Size.setForeground(white);
        NumberFloors.setForeground(white);
        NumberRooms.setForeground(white);
        OwnerId.setForeground(white);
        Yard.setForeground(white);
        Addh.setBackground(new Color(0, 82, 33));
        Addh.setForeground(white);
        Modify.setBackground(new Color(0, 82, 33));
        Modify.setForeground(white);
        Delete.setBackground(new Color(0, 82, 33));
        Delete.setForeground(white);
        Location.setForeground(white);
        Noyard.setForeground(white);
        yesyard.setForeground(white);
        Noyard.setBackground(new Color(0, 82, 33));
        yesyard.setBackground(new Color(0, 82, 33));
        ID_hh.setForeground(white);
        addRooms.setBackground(new Color(0, 82, 33));
        SubRoom.setBackground(new Color(0, 82, 33));
        addRooms.setForeground(white);
        SubRoom.setForeground(white);
        Back.setForeground(new Color(0, 82, 33));
        Back.setForeground(white);
        Back.setBackground(new Color(0, 82, 33));
        Back.setForeground(white);
        Previous.setBackground(new Color(0, 82, 33));
        Previous.setForeground(Color.white);
        NEXT.setBackground(new Color(0, 82, 33));
        NEXT.setForeground(Color.white);
        jTextArea1.setBackground(new Color(0, 82, 33));
        jTextArea1.setForeground(white);
    }                                    

    private void AddTenantsActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        dispose();
        Tenants te = new Tenants();
        te.setVisible(true);
    }                                          

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        System.exit(0);

    }                                    

    private void lightActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        jMenuBar1.setUI(new BasicMenuBarUI() {
            public void paint(Graphics g, JComponent c) {
                g.setColor(new Color(223, 238, 218));
                g.fillRect(0, 0, c.getWidth(), c.getHeight());
            }
        });
        jPanel1.setBackground(new Color(208, 221, 203));
        jPanel2.setBackground(new Color(223, 238, 218));
        mode.setForeground(Color.BLACK);
        user.setForeground(Color.BLACK);
        option.setForeground(Color.BLACK);
        Help.setForeground(Color.BLACK);
        jPanel2.setBackground(new Color(223, 238, 218));
        mode.setForeground(Color.BLACK);
        user.setForeground(Color.BLACK);
        option.setForeground(Color.BLACK);
        Help.setForeground(Color.BLACK);
         price.setForeground(Color.BLACK);
        H_ID.setForeground(Color.BLACK);
        House_Number.setForeground(Color.BLACK);
        Size.setForeground(Color.BLACK);
        NumberFloors.setForeground(Color.BLACK);
        NumberRooms.setForeground(Color.BLACK);
        OwnerId.setForeground(Color.BLACK);
        Yard.setForeground(Color.BLACK);
        Addh.setBackground(new Color(223, 238, 218));
        Addh.setForeground(Color.BLACK);
        Location.setForeground(Color.BLACK);
        Noyard.setForeground(Color.BLACK);
        yesyard.setForeground(Color.BLACK);
        Noyard.setBackground(new Color(223, 238, 218));
        yesyard.setBackground(new Color(223, 238, 218));
        ID_hh.setForeground(Color.BLACK);
        Modify.setBackground(new Color(223, 238, 218));
        Modify.setForeground(Color.BLACK);
        Delete.setBackground(new Color(223, 238, 218));
        Delete.setForeground(Color.BLACK);
        addRooms.setBackground(new Color(223, 238, 218));
        SubRoom.setBackground(new Color(223, 238, 218));
        addRooms.setForeground(Color.BLACK);
        SubRoom.setForeground(Color.BLACK);
        Back.setForeground(new Color(223, 238, 218));
        Back.setForeground(Color.BLACK);
        Back.setBackground(new Color(223, 238, 218));
        Back.setForeground(Color.BLACK);
        Previous.setBackground(new Color(223, 238, 218));
        Previous.setForeground(Color.BLACK);
        NEXT.setBackground(new Color(223, 238, 218));
        NEXT.setForeground(Color.BLACK);
         jTextArea1.setBackground(new Color(223, 238, 218));
        jTextArea1.setForeground(Color.BLACK);
    }                                     

    private void HelpMenuSelected(javax.swing.event.MenuEvent evt) {                                  
        // TODO add your handling code here:
    }                                 

    private void AboutActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Welcome to the house rental program!!\n \n "
                + "It is a program that enables customers to offer their homes to be rented by other clients.\n"
                + "This program was presented as a project for an advanced programming course, by the two students: Arwa Al-Bassam and Renad AlHarbi.\n"
                + "And supervised by Dr.: Aisha Abdullah. ", "About", JOptionPane.PLAIN_MESSAGE);
    }                                     

    private void ControlActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Welcome to the house rental program!!\n \n"
                + " Below are some shortcuts to facilitate access using the keyboard, without the need for a mouse:\n"
                + "1- Light Mode (ctrl+L).\n 2- Dark Mode. (ctrl+D). \n 3- Exit (Alt+F4).\n 4- Add House (ctrl+H)."
                + " \n 5- Add Tenants (ctrl+T). \n 6- Add Owner (ctrl+O). \n 7- Sign Out (ctrl+X) \n \n  "
                + "\n \n ", "Control", JOptionPane.PLAIN_MESSAGE);
    }                                       

    private void addRoomsActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        count++;
        String st = Integer.toString(count);
        L_NimberRooms.setText(st);
    }                                        

    private void SubRoomActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        count--;
        if (count > 0) {
            String st = Integer.toString(count);
            L_NimberRooms.setText(st);
        } else {
            JOptionPane.showMessageDialog(this, "The entered number is wrong\n \n", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }                                       

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        dispose();
        HomePage ho = new HomePage();
        ho.setVisible(true);
    }                                    

    private void AddHouseActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        dispose();
        NewJFrame2 ho = new NewJFrame2();
        ho.setVisible(true);
    }                                        

    private void AddHouseKeyPressed(java.awt.event.KeyEvent evt) {                                    
        // TODO add your handling code here:
        dispose();
        NewJFrame2 ho = new NewJFrame2();
        ho.setVisible(true);
    }                                   

    private void optionActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:

    }                                      

    private void AddHouseKeyTyped(java.awt.event.KeyEvent evt) {                                  
        // TODO add your handling code here:

    }                                 

    private void AddOwnerActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        dispose();
        owner ho = new owner();
        ho.setVisible(true);
    }                                        

    private void SignOutActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        dispose();
        login l = new login();
        l.setVisible(true);
    }                                       

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {                                   
        // TODO add your handling code here:
    }                                  

    private void NEXTActionPerformed(java.awt.event.ActionEvent evt) {                                     
        try {      
            if (resultSet.next()) {
              jTextArea1.setText("ID Owner: " + resultSet.getString("ID_H") + "\n"
                    + "HOUSE NO.: " + resultSet.getInt("HOUSE_NO") + "\n"
                    + "Size: " + resultSet.getInt("Size") + "\n"
                    + "NO. OF Rooms: " + resultSet.getInt("NO_Rooms") + "\n"
                    + "NO. of Floors: " + resultSet.getInt("NO_Floors") + "\n"
                    + "Location: " + resultSet.getString("Location") + "\n"
                    + "HAVE YARD? " + resultSet.getBoolean("Yard") + "\n"
                      + "ID_Owner: " + resultSet.getString("ID_O") + "\n"
                    + "Price: " + resultSet.getDouble("Price") + "\n" );
                   
               resultSet.updateRow();
               

               ID_hh.setText( resultSet.getString("ID_H"));
               L_HouseNumber.setText( String.valueOf(resultSet.getInt("HOUSE_NO")));
               L_Size.setText( String.valueOf(resultSet.getInt("Size")));
               L_NimberRooms.setText( String.valueOf(resultSet.getInt("NO_Rooms")));
               ListFloor.setText( String.valueOf(resultSet.getInt("NO_Floors")));
               L_Location.setText(resultSet.getString("Location"));
               
              
                if (resultSet.getBoolean("Yard")){
                    yesyard.setSelected(true);
                }
                else {
                    Noyard.setSelected(true);
                }
                
                L_OWNER.setText(resultSet.getString("ID_O"));
                L_Price.setText( String.valueOf(resultSet.getInt("Price")));
                
            } else {
                resultSet.previous();
                JOptionPane.showMessageDialog(this, "End of File");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }                                    

    private void PreviousActionPerformed(java.awt.event.ActionEvent evt) {                                         

        try { 
            if (resultSet.previous()) {
               jTextArea1.setText("ID Owner: " + resultSet.getString("ID_H") + "\n"
                    + "HOUSE NO.: " + resultSet.getInt("HOUSE_NO") + "\n"
                    + "Size: " + resultSet.getInt("Size") + "\n"
                    + "NO. OF Rooms: " + resultSet.getInt("NO_Rooms") + "\n"
                    + "NO. of Floors: " + resultSet.getInt("NO_Floors") + "\n"
                    + "Location: " + resultSet.getString("Location") + "\n"
                    + "HAVE YARD? " + resultSet.getBoolean("Yard") + "\n"
                    + "Price: " + resultSet.getDouble("Price") + "\n"
                    + "ID_Owner: " + resultSet.getString("ID_O") + "\n");
               resultSet.updateRow();
               
                     ID_hh.setText( resultSet.getString("ID_H"));
               L_HouseNumber.setText( String.valueOf(resultSet.getInt("HOUSE_NO")));
               L_Size.setText( String.valueOf(resultSet.getInt("Size")));
               L_NimberRooms.setText( String.valueOf(resultSet.getInt("NO_Rooms")));
               ListFloor.setText( String.valueOf(resultSet.getInt("NO_Floors")));
               L_Location.setText(resultSet.getString("Location"));
               
                if (resultSet.getBoolean("Yard")){
                    yesyard.setSelected(true);
                }
                else {
                    Noyard.setSelected(true);
                }
                
                L_OWNER.setText(resultSet.getString("ID_O"));
                L_Price.setText( String.valueOf(resultSet.getInt("Price")));
                
            } else {
                resultSet.next();
                JOptionPane.showMessageDialog(this, "Start of File");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }                                        

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {                                       
        try {
            resultSet.deleteRow();
            resultSet.close();
            statement.close();
            statement = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            resultSet = statement.executeQuery(query);
            resultSet.next();

            
jTextArea1.setText ("");
            ID_hh.setText("");
            L_HouseNumber.setText("");
            L_Size.setText("");
            L_NimberRooms.setText("");
            ListFloor.setText("");
            L_Location.setText("");
            L_Price.setText("");
            L_OWNER.setText("");

            ID_hh.getText();
            L_HouseNumber.getText();
            L_Size.getText();
            L_NimberRooms.getText();
            ListFloor.getText();
            L_Location.getText();
            L_Price.getText();
            L_OWNER.getText();

            JOptionPane.showMessageDialog(this, "Record Deleted.");
        } catch (SQLException sqlEx) {
            JOptionPane.showMessageDialog(this, sqlEx.getMessage());
        }
    }                                      

    private void AddhActionPerformed(java.awt.event.ActionEvent evt) {                                     
          try { 
       String IDhouse = ID_hh.getText();    
        String NOhouses = L_HouseNumber.getText();
        String sizee = L_Size.getText();
        String noOFr = L_NimberRooms.getText();
        String NOofF = ListFloor.getText();
        String PRICEE = L_Price.getText();
        String location = L_Location.getText(); 
        String ownerid = L_OWNER.getText(); 
if (yesyard.isSelected()) {
            YARD = true;

        } else if (Noyard.isSelected()) {
            YARD = false;
        }
        int NOofHOUSES = Integer.parseInt(NOhouses);
        int NOofROOM = Integer.parseInt(noOFr);
        int SIZEofHOUSE = Integer.parseInt(sizee);
        int NOofFLOOR = Integer.parseInt(NOofF);
        double THEprice = Double.parseDouble(PRICEE);


            query = "insert into HOUSESInformation values(?,?,?,?,?,?,?,?,?);";
            preparedstatement = connection.prepareStatement(query);
            preparedstatement.setString(1, IDhouse);
            preparedstatement.setInt(2, NOofHOUSES);
            preparedstatement.setInt(3, SIZEofHOUSE);
            preparedstatement.setInt(4, NOofROOM);
            preparedstatement.setInt(5, NOofFLOOR);
             preparedstatement.setString(6, location);
            preparedstatement.setBoolean(7, YARD);
            preparedstatement.setDouble(8, THEprice);
            preparedstatement.setString(9, ownerid);
            preparedstatement.execute();
            preparedstatement.close();
            JOptionPane.showMessageDialog(this, "Successfully Aded!");

             jTextArea1.setText("ID Owner: " + ID_hh.getText() + "\n"
                    + "HOUSE NO.: " + L_HouseNumber.getText() + "\n"
                    + "Size: " + L_Size.getText() + "\n"
                    + "NO. OF Rooms: " + L_NimberRooms.getText() + "\n"
                    + "NO. of Floors: " + ListFloor.getText() + "\n"
                    + "Location: " + L_Location.getText() + "\n"
                    + "HAVE YARD?: " + YARD + "\n"
                    + "Price: " + L_Price.getText() + "\n"
                    + "ID_Owner: " + L_OWNER.getText() + "\n"
            );
              ID_hh.setText("");
            L_HouseNumber.setText("");
            L_Size.setText("");
            L_NimberRooms.setText("");
            ListFloor.setText("");
            L_Location.setText("");
            L_Price.setText("");
            L_OWNER.setText("");  
            }catch (SQLException sqlEx) {
            JOptionPane.showMessageDialog(this, sqlEx.getMessage());
        }
         catch (Exception x){
          JOptionPane.showMessageDialog(this, "Invalid, Please try again");   
        }
    query = "select * from HOUSESInformation";
    try {
        resultSet = statement.executeQuery(query);
    } catch (SQLException ex) {
        Logger.getLogger(Tenants.class.getName()).log(Level.SEVERE, null, ex);
    }

    }                                    

    private void ModifyActionPerformed(java.awt.event.ActionEvent evt) {                                       
//DB CODE
        String NOhouses = L_HouseNumber.getText();
        String sizee = L_Size.getText();
        String noOFr = L_NimberRooms.getText();
        String NOofF = ListFloor.getText();
        String PRICEE = L_Price.getText();

        int NOofHOUSES = Integer.parseInt(NOhouses);
        int NOofROOM = Integer.parseInt(noOFr);
        int SIZEofHOUSE = Integer.parseInt(sizee);
        int NOofFLOOR = Integer.parseInt(NOofF);
        double THEprice = Double.parseDouble(PRICEE);

        //yard CHEACK
        if (yesyard.isSelected()) {
            YARD = true;

        } else if (Noyard.isSelected()) {
            YARD = false;
        }
        //END 
        try {          
          resultSet.updateString("ID_H", ID_hh.getText());
            resultSet.updateString("ID_O", L_OWNER.getText());
            resultSet.updateInt("HOUSE_NO", NOofHOUSES);
            resultSet.updateInt("NO_Rooms", NOofROOM);
            resultSet.updateInt("NO_Floors", NOofFLOOR);
            resultSet.updateInt("Size", SIZEofHOUSE);
            resultSet.updateDouble("Price", SIZEofHOUSE);
            resultSet.updateBoolean("Yard", YARD);
            resultSet.updateRow();
            JOptionPane.showMessageDialog(this, "Updated");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }                                      

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {                                           
      ImageIcon icon1 = new ImageIcon("contctt.png");
                JOptionPane.showMessageDialog(
                        null,
                        new JLabel("To Contact us: \n scanne our Barcode IN the whatsapp", icon1, JLabel.LEFT),
                        "Contact", JOptionPane.PLAIN_MESSAGE);
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JMenuItem About;
    private javax.swing.JMenuItem AddHouse;
    private javax.swing.JMenuItem AddOwner;
    private javax.swing.JMenuItem AddTenants;
    private javax.swing.JButton Addh;
    private javax.swing.JButton Back;
    private javax.swing.JMenuItem Control;
    private javax.swing.JMenuItem Dark;
    private javax.swing.JButton Delete;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JLabel H_ID;
    private javax.swing.JMenu Help;
    private javax.swing.JLabel House_Number;
    private javax.swing.JTextField ID_hh;
    private javax.swing.JTextField L_HouseNumber;
    private javax.swing.JTextField L_Location;
    private javax.swing.JTextField L_NimberRooms;
    private javax.swing.JTextField L_OWNER;
    private javax.swing.JTextField L_Price;
    private javax.swing.JTextField L_Size;
    private javax.swing.JTextField ListFloor;
    private javax.swing.JLabel Location;
    private javax.swing.JButton Modify;
    private javax.swing.JButton NEXT;
    private javax.swing.JRadioButton Noyard;
    private javax.swing.JLabel NumberFloors;
    private javax.swing.JLabel NumberRooms;
    private javax.swing.JLabel OwnerId;
    private javax.swing.JButton Previous;
    private javax.swing.JMenuItem SignOut;
    private javax.swing.JLabel Size;
    private javax.swing.JToggleButton SubRoom;
    private javax.swing.JLabel Yard;
    private javax.swing.JToggleButton addRooms;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenuItem light;
    private javax.swing.JMenu mode;
    private javax.swing.JMenu option;
    private javax.swing.JLabel price;
    private javax.swing.JMenu user;
    private javax.swing.JRadioButton yesyard;
    // End of variables declaration                   
}

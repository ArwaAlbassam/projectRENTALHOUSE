/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication394;

import java.awt.*;
import static java.awt.Color.white;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.plaf.basic.BasicMenuBarUI;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


/**
 *
 * @author arwah
 */
public class Tenants extends javax.swing.JFrame {
static  PreparedStatement preparedstatement;
    int count = 0;
    Connection connection = null;
    Statement statement = null;
    ResultSet resultSet = null;
    String query;
    int curRow = 0;

    /**
     * Creates new form NewJFrame
     */
    public Tenants() {
        initComponents();
        doConnect();
        setTitle("House Rental-Add Tenants");
     
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("Houses.png")));
       
        jMenuBar1.setUI(new BasicMenuBarUI() {
            public void paint(Graphics g, JComponent c) {
                g.setColor(new Color(223, 238, 218));
                g.fillRect(0, 0, c.getWidth(), c.getHeight());
            }
        });

        
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        double width = toolkit.getScreenSize().getWidth();
        double height = toolkit.getScreenSize().getHeight();
        setSize((int) width, (int) height);
       

    }

    public void doConnect() {
        String gemdder = "", STT = "";
        try {
            String URL = "jdbc:mysql://localhost/RentalHouses";
            String username = "root";
            String password = "12345";
            query = "select * from tensntInformation";
            connection = DriverManager.getConnection(URL, username, password);
            statement = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            resultSet = statement.executeQuery(query);

            resultSet.next();
//GENDER CHEACK
            if (Femal.isSelected()) {
                gemdder = "Female";
            } else if (male.isSelected()) {
                gemdder = "Male";
            }
            //END 

            //Status CHEACK
            if (Single.isSelected()) {
                STT = "Single";
            } else if (married.isSelected()) {
                STT = "Married";
            }
            //END 

       
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    } // end doConnect
    // end class 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        O_ID = new javax.swing.JLabel();
        Owner_Name = new javax.swing.JLabel();
        L_ownerName = new javax.swing.JTextField();
        Owner_Phone = new javax.swing.JLabel();
        Owner_Email = new javax.swing.JLabel();
        L_ownerNumber = new javax.swing.JTextField();
        DOB = new javax.swing.JLabel();
        L_ownerEmail = new javax.swing.JTextField();
        Gender_T = new javax.swing.JLabel();
        Femal = new javax.swing.JRadioButton();
        male = new javax.swing.JRadioButton();
        RentF = new javax.swing.JLabel();
        RentF1 = new javax.swing.JLabel();
        Status_T1 = new javax.swing.JLabel();
        Single = new javax.swing.JRadioButton();
        married = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        RENT_TO = new javax.swing.JTextField();
        L_O_ID = new javax.swing.JTextField();
        L_houseid = new javax.swing.JLabel();
        HoId = new javax.swing.JTextField();
        addRecord = new javax.swing.JButton();
        deleteRecord = new javax.swing.JButton();
        updateRecord = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        nextButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();
        checkout = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        option = new javax.swing.JMenu();
        AddHouse = new javax.swing.JMenuItem();
        AddTenants = new javax.swing.JMenuItem();
        AddOwner = new javax.swing.JMenuItem();
        user = new javax.swing.JMenu();
        SignOut = new javax.swing.JMenuItem();
        mode = new javax.swing.JMenu();
        light = new javax.swing.JMenuItem();
        Dark = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        Help = new javax.swing.JMenu();
        Control = new javax.swing.JMenuItem();
        About = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        jMenuItem1.setText("jMenuItem1");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(208, 221, 203));

        jPanel2.setBackground(new java.awt.Color(223, 238, 218));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED), "*Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Sitka Banner", 3, 24), new java.awt.Color(153, 153, 153))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(578, 700));

        O_ID.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        O_ID.setText("ID");

        Owner_Name.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        Owner_Name.setText("Name");

        L_ownerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L_ownerNameActionPerformed(evt);
            }
        });

        Owner_Phone.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        Owner_Phone.setText("Phone number");

        Owner_Email.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        Owner_Email.setText("Email");

        L_ownerNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L_ownerNumberActionPerformed(evt);
            }
        });

        DOB.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        DOB.setText("Date of Birth");

        L_ownerEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                L_ownerEmailActionPerformed(evt);
            }
        });

        Gender_T.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        Gender_T.setText("Gender");

        buttonGroup1.add(Femal);
        Femal.setText("Female ");

        buttonGroup1.add(male);
        male.setText("Male");

        RentF.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        RentF.setText("Rent from");

        RentF1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        RentF1.setText("Rent To");

        Status_T1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        Status_T1.setText("Status");

        buttonGroup2.add(Single);
        Single.setText("Single");

        buttonGroup2.add(married);
        married.setText("Married ");

        L_houseid.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        L_houseid.setText("House ID");
        L_houseid.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Status_T1)
                        .addGap(110, 110, 110)
                        .addComponent(Single)
                        .addGap(18, 18, 18)
                        .addComponent(married)
                        .addGap(24, 118, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Owner_Name)
                                .addComponent(O_ID, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(Owner_Phone)
                            .addComponent(Owner_Email)
                            .addComponent(Gender_T)
                            .addComponent(DOB)
                            .addComponent(RentF1)
                            .addComponent(RentF)
                            .addComponent(L_houseid))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(Femal)
                                .addGap(27, 27, 27)
                                .addComponent(male)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(HoId)
                                    .addComponent(L_ownerNumber, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(L_ownerEmail, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(RENT_TO)
                                    .addComponent(jTextField2)
                                    .addComponent(L_O_ID)
                                    .addComponent(L_ownerName, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(65, 65, 65))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(O_ID)
                    .addComponent(L_O_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Owner_Name)
                    .addComponent(L_ownerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Owner_Phone)
                    .addComponent(L_ownerNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_ownerEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Owner_Email))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Gender_T)
                    .addComponent(Femal)
                    .addComponent(male))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(DOB)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Status_T1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Single)
                        .addComponent(married)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RentF))
                .addGap(49, 49, 49)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RentF1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(RENT_TO, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_houseid)
                    .addComponent(HoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
        );

        addRecord.setBackground(new java.awt.Color(223, 238, 218));
        addRecord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/AddHouse.png"))); // NOI18N
        addRecord.setText("Add");
        addRecord.setPreferredSize(new java.awt.Dimension(95, 29));
        addRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRecordActionPerformed(evt);
            }
        });

        deleteRecord.setBackground(new java.awt.Color(223, 238, 218));
        deleteRecord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/DeleteIcon.png"))); // NOI18N
        deleteRecord.setText("Delete");
        deleteRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRecordActionPerformed(evt);
            }
        });

        updateRecord.setBackground(new java.awt.Color(223, 238, 218));
        updateRecord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/ModifyIcon.png"))); // NOI18N
        updateRecord.setText("Modify");
        updateRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRecordActionPerformed(evt);
            }
        });

        Back.setBackground(new java.awt.Color(223, 238, 218));
        Back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/Back.jpg"))); // NOI18N
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(230, 245, 226));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Sitka Small", 2, 28)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        nextButton.setBackground(new java.awt.Color(223, 238, 218));
        nextButton.setText("NEXT");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        previousButton.setBackground(new java.awt.Color(223, 238, 218));
        previousButton.setText("Previous");
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        checkout.setBackground(new java.awt.Color(223, 238, 218));
        checkout.setText("Checkout");
        checkout.setToolTipText("");
        checkout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addComponent(previousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(deleteRecord)
                        .addGap(18, 18, 18)
                        .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addRecord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Back, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkout)
                            .addComponent(updateRecord))
                        .addGap(255, 255, 255))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(previousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(deleteRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkout, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(208, 221, 203));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(208, 221, 203)));
        jMenuBar1.setAlignmentY(0.5F);

        option.setText("  Options  ");
        option.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N

        AddHouse.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        AddHouse.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AddHouse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/AddHouse.png"))); // NOI18N
        AddHouse.setText("Add House");
        AddHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddHouseActionPerformed(evt);
            }
        });
        option.add(AddHouse);

        AddTenants.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        AddTenants.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AddTenants.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/AddTenants.png"))); // NOI18N
        AddTenants.setText("Add Tenants");
        AddTenants.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddTenantsActionPerformed(evt);
            }
        });
        option.add(AddTenants);

        AddOwner.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        AddOwner.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        AddOwner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/AddOwner.jpg"))); // NOI18N
        AddOwner.setText("Add Owner");
        AddOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddOwnerActionPerformed(evt);
            }
        });
        option.add(AddOwner);

        jMenuBar1.add(option);

        user.setText("  User  ");
        user.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N

        SignOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        SignOut.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        SignOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/signOutt.png"))); // NOI18N
        SignOut.setText("Sign Out");
        SignOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignOutActionPerformed(evt);
            }
        });
        user.add(SignOut);

        jMenuBar1.add(user);

        mode.setText("  Mode  ");
        mode.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N

        light.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        light.setBackground(new java.awt.Color(223, 238, 218));
        light.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        light.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/sun.png"))); // NOI18N
        light.setText("Light");
        light.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lightActionPerformed(evt);
            }
        });
        mode.add(light);

        Dark.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        Dark.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        Dark.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/Dark.png"))); // NOI18N
        Dark.setText("Dark");
        Dark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DarkActionPerformed(evt);
            }
        });
        mode.add(Dark);

        Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        Exit.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        Exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication394/Exitt.png"))); // NOI18N
        Exit.setText("Exit");
        Exit.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        mode.add(Exit);

        jMenuBar1.add(mode);

        Help.setText("  Help  ");
        Help.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N
        Help.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                HelpMenuSelected(evt);
            }
        });

        Control.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        Control.setText("Help Control");
        Control.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ControlActionPerformed(evt);
            }
        });
        Help.add(Control);

        About.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        About.setText("About");
        About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutActionPerformed(evt);
            }
        });
        Help.add(About);

        jMenuItem4.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jMenuItem4.setText("Contact");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        Help.add(jMenuItem4);

        jMenuBar1.add(Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void DarkActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        jMenuBar1.setUI(new BasicMenuBarUI() {
            public void paint(Graphics g, JComponent c) {
                g.setColor(new Color(0, 82, 33));
                g.fillRect(0, 0, c.getWidth(), c.getHeight());
            }
        });
        
        jPanel1.setBackground(new Color(72, 72, 72));
        jPanel2.setBackground(new Color(0, 82, 33));
        mode.setForeground(Color.WHITE);
        user.setForeground(Color.WHITE);
        option.setForeground(Color.WHITE);
        Help.setForeground(Color.WHITE);
        O_ID.setForeground(white);
        Owner_Name.setForeground(white);
        Owner_Phone.setForeground(white);
        DOB.setForeground(white);
        Owner_Email.setForeground(white);

        addRecord.setBackground(new Color(0, 82, 33));
        addRecord.setForeground(white);
        updateRecord.setBackground(new Color(0, 82, 33));
        updateRecord.setForeground(white);
        deleteRecord.setBackground(new Color(0, 82, 33));
        deleteRecord.setForeground(white);

        L_O_ID.setForeground(white);
        Back.setBackground(new Color(0, 82, 33));
        Back.setForeground(white);
        
        Gender_T.setForeground(white);
        Status_T1.setForeground(white);
        Femal.setForeground(white);
        male.setForeground(white);
        Single.setForeground(white);
        married.setForeground(white);
        RentF.setForeground(white);
        RentF1.setForeground(white);
         L_houseid.setForeground(white);
         
          nextButton.setBackground(new Color(0, 82, 33));
        nextButton.setForeground(white);
        
        previousButton.setBackground(new Color(0, 82, 33));
        previousButton.setForeground(white);
        
        checkout.setBackground(new Color(0, 82, 33));
        checkout.setForeground(white);
    }                                    

    private void AddTenantsActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        dispose();
        Tenants te = new Tenants();
        te.setVisible(true);
    }                                          

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        System.exit(0);

    }                                    

    private void lightActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        jMenuBar1.setUI(new BasicMenuBarUI() {
            public void paint(Graphics g, JComponent c) {
                g.setColor(new Color(223, 238, 218));
                g.fillRect(0, 0, c.getWidth(), c.getHeight());
            }
        });
        jPanel1.setBackground(new Color(208, 221, 203));
        jPanel2.setBackground(new Color(223, 238, 218));
        mode.setForeground(Color.BLACK);
        user.setForeground(Color.BLACK);
        option.setForeground(Color.BLACK);
        Help.setForeground(Color.BLACK);
        jPanel2.setBackground(new Color(223, 238, 218));
        mode.setForeground(Color.BLACK);
        user.setForeground(Color.BLACK);
        option.setForeground(Color.BLACK);
        Help.setForeground(Color.BLACK);
        O_ID.setForeground(Color.BLACK);
        Owner_Name.setForeground(Color.BLACK);
        Owner_Phone.setForeground(Color.BLACK);
        DOB.setForeground(Color.BLACK);
        Owner_Email.setForeground(Color.BLACK);
        addRecord.setBackground(new Color(223, 238, 218));
        addRecord.setForeground(Color.BLACK);
        L_O_ID.setForeground(Color.BLACK);
        updateRecord.setBackground(new Color(223, 238, 218));
        updateRecord.setForeground(Color.BLACK);
        deleteRecord.setBackground(new Color(223, 238, 218));
        deleteRecord.setForeground(Color.BLACK);
        Back.setBackground(new Color(223, 238, 218));
        Back.setForeground(Color.BLACK);
        Gender_T.setForeground(Color.BLACK);
        Status_T1.setForeground(Color.BLACK);
        Femal.setForeground(Color.BLACK);
        male.setForeground(Color.BLACK);
        Single.setForeground(Color.BLACK);
        married.setForeground(Color.BLACK); 
        RentF.setForeground(Color.BLACK); 
        RentF1.setForeground(Color.BLACK);
        L_houseid.setForeground(Color.BLACK);
        nextButton.setBackground(new Color(223, 238, 218));
        nextButton.setForeground(Color.BLACK);
        previousButton.setBackground(new Color(223, 238, 218));
        previousButton.setForeground(Color.BLACK);
        checkout.setBackground(new Color(223, 238, 218));
        checkout.setForeground(Color.BLACK);
    }                                     

    private void HelpMenuSelected(javax.swing.event.MenuEvent evt) {                                  
        // TODO add your handling code here:
    }                                 

    private void AboutActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Welcome to the house rental program!!\n \n "
                + "It is a program that enables customers to offer their homes to be rented by other clients.\n"
                + "This program was presented as a project for an advanced programming course, by the two students: Arwa Al-Bassam and Renad AlHarbi.\n"
                + "And supervised by Dr.: Aisha Abdullah.", "About", JOptionPane.PLAIN_MESSAGE);
        
    }                                     

    private void ControlActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Welcome to the house rental program!!\n \n"
                + " Below are some shortcuts to facilitate access using the keyboard, without the need for a mouse:\n"
                + "1- Light Mode (Ctrl+L).\n 2- Dark Mode. (Ctrl+D). \n 3- Exit (Alt+F4).\n 4- Add House (Ctrl+H)."
                + " \n 5- Add Tenants (Ctrl+T). \n 6- Add Owner (Ctrl+O). \n 7- Sign Out (Ctrl+X) \n \n  "
                + "\n \n ", "Control", JOptionPane.PLAIN_MESSAGE);
    }                                       
    vEMAIL v = new vEMAIL();
    Vphone p = new Vphone();
    private void L_ownerEmailActionPerformed(java.awt.event.ActionEvent evt) {                                             

        if (evt.getSource() == L_ownerEmail) {
            if (v.emailvv(L_ownerEmail.getText()) == false) {
                JOptionPane.showMessageDialog(this, " Enter valid email ", "Email Validation", JOptionPane.PLAIN_MESSAGE);
            }
        }
    }                                            

    private void L_ownerNameActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           
public static boolean isValidDate(String d) 
    { 
        String regex = "^(1[0-2]|0[1-9])/(3[01]"
                       + "|[12][0-9]|0[1-9])/[0-9]{4}$"; 
        Pattern pattern = Pattern.compile(regex); 
        Matcher matcher = pattern.matcher((CharSequence)d); 
        return matcher.matches(); 
    }
    private void addRecordActionPerformed(java.awt.event.ActionEvent evt) {                                          
int z=0;
        //EMAIL CHEACK  
        if (evt.getSource() == addRecord) {
            if (v.emailvv(L_ownerEmail.getText()) == false) {
                z=1;;
                JOptionPane.showMessageDialog(this, " Enter valid email ", "Email Validation", JOptionPane.PLAIN_MESSAGE);
            }
        }
           // phone check
        if (evt.getSource() == addRecord) {
            if (p.phonev(L_ownerNumber.getText()) == false) {
                z=1;
                JOptionPane.showMessageDialog(this, " Enter valid phone ", "Phone Validation", JOptionPane.PLAIN_MESSAGE);
            }
        }
        // date check
         if (evt.getSource() == addRecord) {
            if (isValidDate(jTextField1.getText()) == false) {
                z=1;
                JOptionPane.showMessageDialog(this, " Enter valid Date ", "Phone Validation", JOptionPane.PLAIN_MESSAGE);
            }
        }
         if (evt.getSource() == addRecord) {
            if (isValidDate(RENT_TO.getText()) == false) {
                z=1;
                JOptionPane.showMessageDialog(this, " Enter valid Date ", "Phone Validation", JOptionPane.PLAIN_MESSAGE);
            }
        }
         
         if (evt.getSource() == addRecord) {
            if (isValidDate(jTextField2.getText()) == false) {
                z=1;
                JOptionPane.showMessageDialog(this, " Enter valid Date ", "Phone Validation", JOptionPane.PLAIN_MESSAGE);
            }
        }
        
       
           String IDTe = L_O_ID.getText();    
        String NAMET = L_ownerName.getText();
        String Phone_NoT = L_ownerNumber.getText();
        String EmailT = L_ownerEmail.getText(); 
        String dobt = jTextField2.getText();
        String rentf = jTextField1.getText();
        String rentto = RENT_TO.getText();
        String houseid = HoId.getText(); 
        
       String gemdder = "", STT = "";
  if (Femal.isSelected()) {
            gemdder = "Female";
        } else if (male.isSelected()) {
            gemdder = "Male";
        }
   if (Single.isSelected()) {
            STT = "Single";
        } else if (married.isSelected()) {
            STT = "Married";
        }
        int phoneT = Integer.parseInt(Phone_NoT);   
      if (z!=1){
        try { 
           String query1 = "insert into TensntInformation values(?,?,?,?,?,?,?,?,?,?);";
            preparedstatement = connection.prepareStatement(query1);
            preparedstatement.setString(1, IDTe);
           preparedstatement.setString(2, NAMET);
            preparedstatement.setInt(3, phoneT);
             preparedstatement.setString(4, EmailT);
            preparedstatement.setString(5, gemdder);
            preparedstatement.setString(6, dobt);
            preparedstatement.setString(7, STT);
            preparedstatement.setString(8, rentf);
            preparedstatement.setString(9, rentto);
            preparedstatement.setString(10, houseid);
            preparedstatement.execute();                    
            preparedstatement.close();
            
            JOptionPane.showMessageDialog(this, "Successfully Aded!");
                 L_O_ID.setText("");
            L_ownerName.setText("");
            L_ownerNumber.setText("");
            L_ownerEmail.setText("");
            jTextField2.setText("");
            jTextField1.setText("");
            RENT_TO.setText("");
            HoId.setText("");
            }catch (SQLException sqlEx) {
            JOptionPane.showMessageDialog(this, sqlEx.getMessage());
        }
         catch (Exception x){
          JOptionPane.showMessageDialog(this, "Invalid, Please try again"); 
        }}
       query = "select * from tensntInformation";
    try {
        resultSet = statement.executeQuery(query);
    } catch (SQLException ex) {
        Logger.getLogger(Tenants.class.getName()).log(Level.SEVERE, null, ex);
    }

    }                                         

    private void updateRecordActionPerformed(java.awt.event.ActionEvent evt) {                                             
       int z=0;
        if (evt.getSource() == updateRecord) {
            if (v.emailvv(L_ownerEmail.getText()) == false) {
                z=1;
                JOptionPane.showMessageDialog(this, " Enter valid email ", "Email Validation", JOptionPane.PLAIN_MESSAGE);
            }
        }

        if (evt.getSource() == updateRecord) {
            if (p.phonev(L_ownerNumber.getText()) == false) {
                z=1;
                JOptionPane.showMessageDialog(this, " Enter valid phone ", "Phone Validation", JOptionPane.PLAIN_MESSAGE);
            }
        }
      String gemdder = "", STT = "";
            if (Femal.isSelected()) {
                gemdder = "Female";
            } else if (male.isSelected()) {
                gemdder = "Male";
            }

            if (Single.isSelected()) {
                STT = "Single";
            } else if (married.isSelected()) {
                STT = "Married";
            }

             String IDTe = L_O_ID.getText();    
        String NAMET = L_ownerName.getText();
        String Phone_NoT = L_ownerNumber.getText();
        String EmailT = L_ownerEmail.getText(); 
        String dobt = jTextField2.getText();
        String rentf = jTextField1.getText();
        String rentto = RENT_TO.getText();
        String houseid = HoId.getText(); 

        int phoneT = Integer.parseInt(Phone_NoT);
        //db code
        if (z!=1){
      try {
            resultSet.updateString("ID_T", IDTe);
            resultSet.updateString("NAME", NAMET);
            resultSet.updateInt("Phone_NO", phoneT);
            resultSet.updateString("Email", EmailT);
            resultSet.updateString("Gender", gemdder);
            resultSet.updateString("DOB", dobt);
            resultSet.updateString("Status", STT);
            resultSet.updateString("Rent_FROM",rentf);
            resultSet.updateString("Rent_TO",rentto);
            resultSet.updateString("ID_H",houseid);
            resultSet.updateRow();
            JOptionPane.showMessageDialog(this, "Updated");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        }

    }                                            

    private void AddHouseActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        dispose();
        NewJFrame2 ho = new NewJFrame2();
        ho.setVisible(true);
    }                                        

    private void AddOwnerActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        dispose();
        owner ho = new owner();
        ho.setVisible(true);
    }                                        

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        dispose();
        HomePage ho = new HomePage();
        ho.setVisible(true);
    }                                    

    private void SignOutActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        dispose();
        login l = new login();
        l.setVisible(true);
    }                                       

    private void L_ownerNumberActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        if (evt.getSource() == L_ownerNumber) {
            if (p.phonev(L_ownerNumber.getText()) == false) {
                JOptionPane.showMessageDialog(this, " Enter valid phone ", "Phone Validation", JOptionPane.PLAIN_MESSAGE);
            }
        }
    }                                             
  
    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {                                           
        try {
            if (resultSet.next()) {
                jTextArea1.setText("ID Tenants: " + resultSet.getString("ID_T") + "\n"
                        + "NAME: " + resultSet.getString("NAME") + "\n"
                        + "Phone_NO: " + resultSet.getString("Phone_NO") + "\n"
                        + "EMAIL: " + resultSet.getString("Email") + "\n"
                        + "Gender: " + resultSet.getString("Gender") + "\n"
                        + "DOB: " + resultSet.getString("DOB") + "\n"
                        + "Status: " + resultSet.getString("Status") + "\n"
                        + "RENT FROM: " + resultSet.getString("Rent_FROM") + "\n"
                        + "RENT TO: " + resultSet.getString("Rent_TO") + "\n"
                        + "House ID: " + resultSet.getString("ID_H") + "\n");
                resultSet.updateRow();
                               
                     L_O_ID.setText(resultSet.getString("ID_T"));
                L_ownerName.setText(resultSet.getString("NAME"));
                L_ownerNumber.setText(resultSet.getString("Phone_NO"));
                L_ownerEmail.setText(resultSet.getString("Email"));
                if ("Female".equals(resultSet.getString("Gender"))) {
                    Femal.setSelected(true);
                } else {
                    male.setSelected(true);
                }
                jTextField2.setText(resultSet.getString("DOB"));

                if ("Single".equals(resultSet.getString("Status"))) {
                    Single.setSelected(true);
                } else {
                    married.setSelected(true);
                }
                jTextField1.setText(resultSet.getString("Rent_FROM"));
                RENT_TO.setText(resultSet.getString("Rent_TO"));
                HoId.setText(resultSet.getString("ID_H"));

            } else {
                resultSet.previous();
                JOptionPane.showMessageDialog(this, "End of File");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }


    }                                          

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {                                               
        try {
            if (resultSet.previous()) {
                jTextArea1.setText("ID Tenants: " + resultSet.getString("ID_T") + "\n"
                        + "NAME: " + resultSet.getString("NAME") + "\n"
                        + "Phone_NO: " + resultSet.getString("Phone_NO") + "\n"
                        + "EMAIL: " + resultSet.getString("Email") + "\n"
                        + "Gender: " + resultSet.getString("Gender") + "\n"
                        + "DOB: " + resultSet.getString("DOB") + "\n"
                        + "Status: " + resultSet.getString("Status") + "\n"
                        + "RENT FROM: " + resultSet.getString("Rent_FROM") + "\n"
                        + "RENT TO: " + resultSet.getString("Rent_TO") + "\n"
                        + "House ID: " + resultSet.getString("ID_H") + "\n");
                resultSet.updateRow();

                L_O_ID.setText(resultSet.getString("ID_T"));
                L_ownerName.setText(resultSet.getString("NAME"));
                L_ownerNumber.setText(resultSet.getString("Phone_NO"));
                L_ownerEmail.setText(resultSet.getString("Email"));
                if ("Female".equals(resultSet.getString("Gender"))) {
                    Femal.setSelected(true);
                } else {
                    male.setSelected(true);
                }
                jTextField2.setText(resultSet.getString("DOB"));

                if ("Single".equals(resultSet.getString("Status"))) {
                    Single.setSelected(true);
                } else {
                    married.setSelected(true);
                }
                jTextField1.setText(resultSet.getString("Rent_FROM"));
                RENT_TO.setText(resultSet.getString("Rent_TO"));
                HoId.setText(resultSet.getString("ID_H"));

            } else {
                resultSet.next();
                JOptionPane.showMessageDialog(this, "Start of File");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }                                              

    private void deleteRecordActionPerformed(java.awt.event.ActionEvent evt) {                                             
         try {
            resultSet.deleteRow();
            resultSet.close();
            statement.close();

            statement = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_UPDATABLE);
            resultSet = statement.executeQuery(query);
            resultSet.next();

            jTextArea1.setText("ID Tenants: " + resultSet.getString("ID_T") + "\n"
                    + "NAME: " + resultSet.getString("NAME") + "\n"
                    + "Phone_NO: " + resultSet.getInt("Phone_NO") + "\n"
                    + "EMAIL: " + resultSet.getString("Email") + "\n"
                    + "Gender: " + resultSet.getString("Gender") + "\n"
                    + "DOB: " + resultSet.getString("DOB") + "\n"
                    + "Status: " + resultSet.getString("Status") + "\n"
                    + "RENT FROM: " + resultSet.getString("Rent_FROM") + "\n"
                    + "RENT TO: " + resultSet.getString("Rent_TO") + "\n"
                    + "House ID: " + resultSet.getString("ID_H") + "\n");
            jTextArea1.setText("");

            L_O_ID.setText("");
            L_ownerName.setText("");
            L_ownerNumber.setText("");
            L_ownerEmail.setText("");
            jTextField2.setText("");
            jTextField1.setText("");
            RENT_TO.setText("");
            HoId.setText("");
            L_O_ID.getText();
            L_ownerName.getText();
            L_ownerNumber.getText();
            L_ownerEmail.getText();
            jTextField2.getText();
            jTextField1.getText();
            RENT_TO.getText();
            jTextArea1.getText();
            HoId.getText();
            JOptionPane.showMessageDialog(this, "Record Deleted.");
        } catch (SQLException sqlEx) {
            JOptionPane.showMessageDialog(this, sqlEx.getMessage());
        }

    }                                            

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {                                           
      ImageIcon icon1 = new ImageIcon("contctt.png");
                JOptionPane.showMessageDialog(
                        null,
                        new JLabel("To Contact us: \n scanne our Barcode IN the whatsapp", icon1, JLabel.LEFT),
                        "Contact", JOptionPane.PLAIN_MESSAGE);
    }                                          

    private void checkoutActionPerformed(java.awt.event.ActionEvent evt) {                                         
      dispose();
   Checkout c = new Checkout();
   c.setVisible(true);
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tenants.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tenants.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tenants.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tenants.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tenants().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify                     
    private javax.swing.JMenuItem About;
    private javax.swing.JMenuItem AddHouse;
    private javax.swing.JMenuItem AddOwner;
    private javax.swing.JMenuItem AddTenants;
    private javax.swing.JButton Back;
    private javax.swing.JMenuItem Control;
    private javax.swing.JLabel DOB;
    private javax.swing.JMenuItem Dark;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JRadioButton Femal;
    private javax.swing.JLabel Gender_T;
    private javax.swing.JMenu Help;
    private javax.swing.JTextField HoId;
    private javax.swing.JTextField L_O_ID;
    private javax.swing.JLabel L_houseid;
    private javax.swing.JTextField L_ownerEmail;
    private javax.swing.JTextField L_ownerName;
    private javax.swing.JTextField L_ownerNumber;
    private javax.swing.JLabel O_ID;
    private javax.swing.JLabel Owner_Email;
    private javax.swing.JLabel Owner_Name;
    private javax.swing.JLabel Owner_Phone;
    private javax.swing.JTextField RENT_TO;
    private javax.swing.JLabel RentF;
    private javax.swing.JLabel RentF1;
    private javax.swing.JMenuItem SignOut;
    private javax.swing.JRadioButton Single;
    private javax.swing.JLabel Status_T1;
    private javax.swing.JButton addRecord;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton checkout;
    private javax.swing.JButton deleteRecord;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JMenuItem light;
    private javax.swing.JRadioButton male;
    private javax.swing.JRadioButton married;
    private javax.swing.JMenu mode;
    private javax.swing.JButton nextButton;
    private javax.swing.JMenu option;
    private javax.swing.JButton previousButton;
    private javax.swing.JButton updateRecord;
    private javax.swing.JMenu user;
    // End of variables declaration                   
}


